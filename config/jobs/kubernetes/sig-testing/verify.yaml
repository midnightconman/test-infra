presubmits:
  kubernetes/kubernetes:
  # TODO(krzyzacy): add branches once this works
  # TODO(krzyzacy): Consider combine kubekins-e2e and kubekins-test
  - name: pull-kubernetes-verify
    always_run: true
    decorate: true
    skip_branches:
    - release-1.13
    - release-1.12
    - release-1.11
    - release-1.10
    path_alias: k8s.io/kubernetes
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190214-f4092ae69-master
        imagePullPolicy: Always
        command:
        - runner.sh
        args:
        - ./hack/jenkins/verify-dockerized.sh
        env:
        - name: KUBE_FORCE_VERIFY_CHECKS
          value: "n"
        - name: EXCLUDE_TYPECHECK
          value: "y"
        - name: EXCLUDE_GODEP
          value: "y"
        - name: KUBE_VERIFY_GIT_BRANCH
          value: master
        - name: REPO_DIR
          value: /workspace/k8s.io/kubernetes
        # TODO(bentheelder): remove bandaid once we have this metadata exposed
        # properly, first-class
        - name: METADATA_BANDAID
          value: "true"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 4
  - name: pull-kubernetes-verify
    always_run: true
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
    # the podutils version above does newer branches
    branches:
    - release-1.13
    - release-1.12
    - release-1.11
    - release-1.10
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:v20190211-fab6034b4
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=75"
        - --scenario=kubernetes_verify
        - --
        - "--branch=${PULL_BASE_REF}"
        - --exclude-typecheck
        - --exclude-godep
        - --script=./hack/jenkins/verify-dockerized.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 4

periodics:
- interval: 1h
  name: ci-kubernetes-verify-master
  labels:
    preset-service-account: "true"
    preset-dind-enabled: "true"
  decorate: true
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20190214-f4092ae69-master
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - ./hack/jenkins/verify-dockerized.sh
      env:
      - name: KUBE_FORCE_VERIFY_CHECKS
        value: "y"
      - name: EXCLUDE_READONLY_PACKAGE
        value: "y"
      - name: KUBE_VERIFY_GIT_BRANCH
        value: master
      - name: REPO_DIR
        value: /workspace/k8s.io/kubernetes
      # TODO(bentheelder): remove bandaid once we have this metadata exposed
      # properly, first-class
      - name: METADATA_BANDAID
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      resources:
        requests:
          cpu: 4

# manual-release-bump-required
- interval: 2h
  name: ci-kubernetes-verify-beta
  labels:
    preset-service-account: "true"
    preset-dind-enabled: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20190211-fab6034b4
      args:
      - --repo=k8s.io/kubernetes=release-1.13
      - --timeout=75
      - --scenario=kubernetes_verify
      - --
      - --branch=release-1.13
      - --force
      - --script=./hack/jenkins/verify-dockerized.sh
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      resources:
        requests:
          cpu: 4

# manual-release-bump-required
- interval: 2h
  name: ci-kubernetes-verify-stable1
  labels:
    preset-service-account: "true"
    preset-dind-enabled: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20190211-fab6034b4
      args:
      - --repo=k8s.io/kubernetes=release-1.12
      - --timeout=75
      - --scenario=kubernetes_verify
      - --
      - --branch=release-1.12
      - --force
      - --script=./hack/jenkins/verify-dockerized.sh
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      resources:
        requests:
          cpu: 4

# manual-release-bump-required
- interval: 6h
  name: ci-kubernetes-verify-stable2
  labels:
    preset-service-account: "true"
    preset-dind-enabled: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20190211-fab6034b4
      args:
      - --repo=k8s.io/kubernetes=release-1.11
      - --timeout=75
      - --scenario=kubernetes_verify
      - --
      - --branch=release-1.11
      - --force
      - --script=./hack/jenkins/verify-dockerized.sh
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      resources:
        requests:
          cpu: 4

# manual-release-bump-required
- interval: 24h
  name: ci-kubernetes-verify-stable3
  labels:
    preset-service-account: "true"
    preset-dind-enabled: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20190211-fab6034b4
      args:
      - --repo=k8s.io/kubernetes=release-1.10
      - --timeout=75
      - --scenario=kubernetes_verify
      - --
      - --branch=release-1.10
      - --force
      - --script=./hack/jenkins/verify-dockerized.sh
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      resources:
        requests:
          cpu: 4
